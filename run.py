import os
from app import create_app
from app.core.config import DevelopmentConfig
from app.services.initial_load_service import refresh_estate_data_from_mysql
from app.core.extensions import db
from app.models import auth_models

# –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Flask
app = create_app(DevelopmentConfig)

# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É-—Ñ–ª–∞–≥—É
LOCK_FILE_PATH = os.path.join(app.instance_path, 'update.lock')


def setup_database():
    """
    –°–æ–∑–¥–∞–µ—Ç –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã –≤–æ –≤—Å–µ—Ö —Å–∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –±–∞–∑–∞—Ö –¥–∞–Ω–Ω—ã—Ö,
    –∞ —Ç–∞–∫–∂–µ –Ω–∞—á–∞–ª—å–Ω—ã–µ —Ä–æ–ª–∏ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 'admin'.
    """
    with app.app_context():
        print("\n--- [–û–¢–õ–ê–î–ö–ê] –ù–∞—á–∞–ª–æ —Ñ—É–Ω–∫—Ü–∏–∏ setup_database ---")

        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –º–æ–¥—É–ª–∏ —Å –º–æ–¥–µ–ª—è–º–∏, —á—Ç–æ–±—ã SQLAlchemy –æ –Ω–∏—Ö –∑–Ω–∞–ª–∞
        from app.models import (auth_models, planning_models, estate_models,
                                finance_models, exclusion_models, funnel_models,
                        special_offer_models)

        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–¥–∏–Ω –≤—ã–∑–æ–≤ db.create_all(), –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞—Å—Ç —Ç–∞–±–ª–∏—Ü—ã
        # –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –±–∞–∑–µ –∏ –≤–æ –≤—Å–µ—Ö –±–∞–∑–∞—Ö, —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –≤SQLALCHEMY_BINDS.
        print("--- [–û–¢–õ–ê–î–ö–ê] –í—ã–∑–æ–≤ –µ–¥–∏–Ω–æ–≥–æ db.create_all() –¥–ª—è –≤—Å–µ—Ö –±–∞–∑... ---")
        db.create_all()
        print("--- [–û–¢–õ–ê–î–ö–ê] db.create_all() –¥–ª—è –≤—Å–µ—Ö –±–∞–∑ –∑–∞–≤–µ—Ä—à–µ–Ω. ---")

        # –ö–æ–¥ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–æ–ª–µ–π –∏ –∞–¥–º–∏–Ω–∞ –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        print("--- [–û–¢–õ–ê–î–ö–ê] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ä–æ–ª–µ–π... ---")
        if auth_models.Role.query.count() == 0:
            print("--- [–û–¢–õ–ê–î–ö–ê] –†–æ–ª–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω—ã—Ö —Ä–æ–ª–µ–π –∏ –ø—Ä–∞–≤... ---")

            permissions_map = {
                'view_selection': '–ü—Ä–æ—Å–º–æ—Ç—Ä —Å–∏—Å—Ç–µ–º—ã –ø–æ–¥–±–æ—Ä–∞',
                'view_discounts': '–ü—Ä–æ—Å–º–æ—Ç—Ä –∞–∫—Ç–∏–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —Å–∫–∏–¥–æ–∫',
                'view_version_history': '–ü—Ä–æ—Å–º–æ—Ç—Ä –∏—Å—Ç–æ—Ä–∏–∏ –≤–µ—Ä—Å–∏–π —Å–∫–∏–¥–æ–∫',
                'view_plan_fact_report': '–ü—Ä–æ—Å–º–æ—Ç—Ä –ü–ª–∞–Ω-—Ñ–∞–∫—Ç –æ—Ç—á–µ—Ç–∞',
                'view_inventory_report': '–ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç—á–µ—Ç–∞ –ø–æ –æ—Å—Ç–∞—Ç–∫–∞–º',
                'view_manager_report': '–ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç—á–µ—Ç–æ–≤ –ø–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º',
                'view_project_dashboard': '–ü—Ä–æ—Å–º–æ—Ç—Ä –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –ø–æ –ø—Ä–æ–µ–∫—Ç–∞–º',
                'manage_discounts': '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ä—Å–∏—è–º–∏ —Å–∫–∏–¥–æ–∫ (—Å–æ–∑–¥–∞–Ω–∏–µ, –∞–∫—Ç–∏–≤–∞—Ü–∏—è)',
                'manage_settings': '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ (–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã, –∫—É—Ä—Å)',
                'manage_users': '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏',
                'upload_data': '–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö (–ø–ª–∞–Ω—ã –∏ —Ç.–¥.)',
                'download_kpi_report': '–í—ã–≥—Ä—É–∑–∫–∞ –≤–µ–¥–æ–º–æ—Å—Ç–∏ –ø–æ KPI –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤',
                'manage_specials': '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏ (–∞–∫—Ü–∏–∏)'
            }

            roles_permissions = {
                'MPP': ['view_selection', 'view_discounts'],
                'MANAGER': [
                    'view_selection', 'view_discounts', 'view_version_history', 'manage_settings',
                    'view_plan_fact_report', 'view_inventory_report', 'view_manager_report', 'view_project_dashboard'
                ],
                'ADMIN': [
                    'view_selection', 'view_discounts', 'view_version_history', 'manage_discounts',
                    'manage_settings', 'manage_users', 'upload_data',
                    'view_plan_fact_report', 'view_inventory_report', 'view_manager_report', 'view_project_dashboard',
                    'manage_specials','download_kpi_report'
                ]
            }

            all_permissions = {}
            for name, desc in permissions_map.items():
                p = auth_models.Permission(name=name, description=desc)
                all_permissions[name] = p
                db.session.add(p)

            for role_name, permissions_list in roles_permissions.items():
                role = auth_models.Role(name=role_name)
                db.session.add(role)
                for p_name in permissions_list:
                    if p_name in all_permissions:
                        role.permissions.append(all_permissions[p_name])

            db.session.commit()
            print("--- [–û–¢–õ–ê–î–ö–ê] –†–æ–ª–∏ –∏ –ø—Ä–∞–≤–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã. ---")
        else:
            print("--- [–û–¢–õ–ê–î–ö–ê] –†–æ–ª–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ. ---")

        print("--- [–û–¢–õ–ê–î–ö–ê] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 'admin'... ---")
        if auth_models.User.query.filter_by(username='admin').first() is None:
            print("--- [–û–¢–õ–ê–î–ö–ê] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 'admin' –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–Ω–∏–µ... ---")
            admin_role = auth_models.Role.query.filter_by(name='ADMIN').first()
            if admin_role:
                admin_user = auth_models.User(
                    username='admin',
                    role=admin_role,
                    full_name='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –°–∏—Å—Ç–µ–º—ã',
                    email='d.plakhotnyi@gh.uz'
                )
                admin_user.set_password('admin')
                db.session.add(admin_user)
                db.session.commit()
                print("--- [–û–¢–õ–ê–î–ö–ê] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 'admin' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω. ---")
            else:
                print("--- [–û–¢–õ–ê–î–ö–ê] –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –†–æ–ª—å ADMIN –Ω–µ –Ω–∞–π–¥–µ–Ω–∞! ---")
        else:
            print("--- [–û–¢–õ–ê–î–ö–ê] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 'admin' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. ---")

        print("--- [–û–¢–õ–ê–î–ö–ê] –§—É–Ω–∫—Ü–∏—è setup_database –∑–∞–≤–µ—Ä—à–µ–Ω–∞. ---\n")


# –≠—Ç–æ—Ç –±–ª–æ–∫ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞
if os.environ.get('WERKZEUG_RUN_MAIN') is None:
    # –®–ê–ì 1: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö
    setup_database()

    # –®–ê–ì 2: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ MySQL, –∏—Å–ø–æ–ª—å–∑—É—è —Ñ–ª–∞–≥ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    try:
        with open(LOCK_FILE_PATH, 'w') as f:
            f.write('locked')
        print(f"[UPDATE FLAG] –§–∞–π–ª –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Å–æ–∑–¥–∞–Ω: {LOCK_FILE_PATH}")
        with app.app_context():
            refresh_estate_data_from_mysql()
    finally:
        if os.path.exists(LOCK_FILE_PATH):
            os.remove(LOCK_FILE_PATH)
            print(f"[UPDATE FLAG] –§–∞–π–ª –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —É–¥–∞–ª–µ–Ω.")


if __name__ == '__main__':
    print("[FLASK APP] üö¶ –ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ Flask...")
    app.run(host='0.0.0.0', port=5001, debug=True)