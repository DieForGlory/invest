# run.py
import os
from app import create_app
from app.core.config import DevelopmentConfig
from app.core.extensions import db
from app.models import auth_models

# –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Flask
app = create_app(DevelopmentConfig)


def setup_database():
    """
    –°–æ–∑–¥–∞–µ—Ç –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã, –Ω–∞—á–∞–ª—å–Ω—ã–µ —Ä–æ–ª–∏, –∫–æ–º–ø–∞–Ω–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π 'admin' –∏ 'superadmin'.
    """
    with app.app_context():
        print("\n--- [–û–¢–õ–ê–î–ö–ê] –ù–∞—á–∞–ª–æ —Ñ—É–Ω–∫—Ü–∏–∏ setup_database ---")

        from app.models import (auth_models, planning_models, estate_models,
                                finance_models, exclusion_models, funnel_models,
                                special_offer_models)

        print("--- [–û–¢–õ–ê–î–ö–ê] –í—ã–∑–æ–≤ db.create_all() –¥–ª—è —É–ø—Ä–∞–≤–ª—è—é—â–µ–π –±–∞–∑—ã... ---")
        db.create_all()
        print("--- [–û–¢–õ–ê–î–ö–ê] db.create_all() –∑–∞–≤–µ—Ä—à–µ–Ω. ---")

        if auth_models.Company.query.filter_by(subdomain='default').first() is None:
            print("--- [–û–¢–õ–ê–î–ö–ê] –ö–æ–º–ø–∞–Ω–∏—è 'default' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–æ–∑–¥–∞–Ω–∏–µ... ---")
            tenant_db_path = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'instance', 'tenant_default.db')
            default_company = auth_models.Company(
                name='Default Company',
                subdomain='default',
                db_uri=f'sqlite:///{tenant_db_path}'
            )
            db.session.add(default_company)
            db.session.commit()
            print(f"--- [–û–¢–õ–ê–î–ö–ê] –ö–æ–º–ø–∞–Ω–∏—è 'default' —Å–æ–∑–¥–∞–Ω–∞. –ï–µ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {default_company.db_uri} ---")

            try:
                engine = db.create_engine(default_company.db_uri)
                models_metadata = [
                    planning_models.db.metadata, estate_models.db.metadata,
                    finance_models.db.metadata, exclusion_models.db.metadata,
                    funnel_models.db.metadata, special_offer_models.db.metadata
                ]
                for metadata in models_metadata:
                    metadata.create_all(bind=engine)
                print(f"--- [–û–¢–õ–ê–î–ö–ê] –¢–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ 'tenant_default.db' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã. ---")
            except Exception as e:
                print(f"--- [–û–¢–õ–ê–î–ö–ê] –û–®–ò–ë–ö–ê –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ –∫–æ–º–ø–∞–Ω–∏–∏: {e} ---")
        else:
            print("--- [–û–¢–õ–ê–î–ö–ê] –ö–æ–º–ø–∞–Ω–∏—è 'default' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. ---")

        # --- –£–õ–£–ß–®–ï–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê –°–û–ó–î–ê–ù–ò–Ø –†–û–õ–ï–ô –ò –ü–†–ê–í ---
        print("--- [–û–¢–õ–ê–î–ö–ê] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–ª–µ–π –∏ –ø—Ä–∞–≤... ---")
        permissions_map = {
            'view_selection': '–ü—Ä–æ—Å–º–æ—Ç—Ä —Å–∏—Å—Ç–µ–º—ã –ø–æ–¥–±–æ—Ä–∞', 'view_discounts': '–ü—Ä–æ—Å–º–æ—Ç—Ä –∞–∫—Ç–∏–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —Å–∫–∏–¥–æ–∫',
            'view_version_history': '–ü—Ä–æ—Å–º–æ—Ç—Ä –∏—Å—Ç–æ—Ä–∏–∏ –≤–µ—Ä—Å–∏–π —Å–∫–∏–¥–æ–∫',
            'view_plan_fact_report': '–ü—Ä–æ—Å–º–æ—Ç—Ä –ü–ª–∞–Ω-—Ñ–∞–∫—Ç –æ—Ç—á–µ—Ç–∞',
            'view_inventory_report': '–ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç—á–µ—Ç–∞ –ø–æ –æ—Å—Ç–∞—Ç–∫–∞–º',
            'view_manager_report': '–ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç—á–µ—Ç–æ–≤ –ø–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º',
            'view_project_dashboard': '–ü—Ä–æ—Å–º–æ—Ç—Ä –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –ø–æ –ø—Ä–æ–µ–∫—Ç–∞–º',
            'manage_discounts': '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ä—Å–∏—è–º–∏ —Å–∫–∏–¥–æ–∫ (—Å–æ–∑–¥–∞–Ω–∏–µ, –∞–∫—Ç–∏–≤–∞—Ü–∏—è)',
            'manage_settings': '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ (–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã, –∫—É—Ä—Å)',
            'manage_users': '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏',
            'upload_data': '–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö (–ø–ª–∞–Ω—ã –∏ —Ç.–¥.)',
            'download_kpi_report': '–í—ã–≥—Ä—É–∑–∫–∞ –≤–µ–¥–æ–º–æ—Å—Ç–∏ –ø–æ KPI –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤',
            'manage_specials': '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏ (–∞–∫—Ü–∏–∏)'
        }

        all_permissions = {}
        for name, desc in permissions_map.items():
            p = auth_models.Permission.query.filter_by(name=name).first()
            if not p:
                p = auth_models.Permission(name=name, description=desc)
                db.session.add(p)
            all_permissions[name] = p
        db.session.commit()

        roles_permissions = {
            'MPP': ['view_selection', 'view_discounts'],
            'MANAGER': ['view_selection', 'view_discounts', 'view_version_history', 'manage_settings',
                        'view_plan_fact_report', 'view_inventory_report', 'view_manager_report',
                        'view_project_dashboard'],
            'ADMIN': list(permissions_map.keys()),
            'SUPERADMIN': list(permissions_map.keys())
        }

        for role_name, permissions_list in roles_permissions.items():
            role = auth_models.Role.query.filter_by(name=role_name).first()
            if not role:
                role = auth_models.Role(name=role_name)
                db.session.add(role)
                db.session.flush()  # –ü–æ–ª—É—á–∞–µ–º ID –¥–ª—è —Å–≤—è–∑–∏
                for p_name in permissions_list:
                    if p_name in all_permissions:
                        role.permissions.append(all_permissions[p_name])
        db.session.commit()
        print("--- [–û–¢–õ–ê–î–ö–ê] –†–æ–ª–∏ –∏ –ø—Ä–∞–≤–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã/–ø—Ä–æ–≤–µ—Ä–µ–Ω—ã. ---")

        if auth_models.User.query.filter_by(username='admin').first() is None:
            print("--- [–û–¢–õ–ê–î–ö–ê] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 'admin' –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–Ω–∏–µ... ---")
            admin_role = auth_models.Role.query.filter_by(name='ADMIN').first()
            default_company = auth_models.Company.query.filter_by(subdomain='default').first()
            if admin_role and default_company:
                admin_user = auth_models.User(
                    username='admin',
                    role=admin_role,
                    full_name='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –°–∏—Å—Ç–µ–º—ã',
                    email='d.plakhotnyi@gh.uz',
                    company_id=default_company.id
                )
                admin_user.set_password('admin')
                db.session.add(admin_user)
                db.session.commit()
                print("--- [–û–¢–õ–ê–î–ö–ê] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 'admin' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω. ---")
            else:
                print("--- [–û–¢–õ–ê–î–ö–ê] –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –†–æ–ª—å ADMIN –∏–ª–∏ –∫–æ–º–ø–∞–Ω–∏—è 'default' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! ---")
        else:
            print("--- [–û–¢–õ–ê–î–ö–ê] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 'admin' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. ---")

        print("--- [–û–¢–õ–ê–î–ö–ê] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 'superadmin'...")
        if auth_models.User.query.filter_by(username='superadmin').first() is None:
            print("--- [–û–¢–õ–ê–î–ö–ê] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 'superadmin' –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–Ω–∏–µ... ---")
            superadmin_role = auth_models.Role.query.filter_by(name='SUPERADMIN').first()
            default_company = auth_models.Company.query.filter_by(subdomain='default').first()

            if superadmin_role and default_company:
                superadmin_user = auth_models.User(
                    username='superadmin',
                    role=superadmin_role,
                    full_name='–ì–ª–∞–≤–Ω—ã–π –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
                    email='superadmin@example.com',
                    company_id=default_company.id
                )
                superadmin_user.set_password('superadmin')
                db.session.add(superadmin_user)
                db.session.commit()
                print("--- [–û–¢–õ–ê–î–ö–ê] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 'superadmin' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω. ---")
            else:
                print("--- [–û–¢–õ–ê–î–ö–ê] –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –†–æ–ª—å SUPERADMIN –∏–ª–∏ –∫–æ–º–ø–∞–Ω–∏—è 'default' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! ---")
        else:
            print("--- [–û–¢–õ–ê–î–ö–ê] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 'superadmin' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. ---")

        print("--- [–û–¢–õ–ê–î–ö–ê] –§—É–Ω–∫—Ü–∏—è setup_database –∑–∞–≤–µ—Ä—à–µ–Ω–∞. ---\n")


if os.environ.get('WERKZEUG_RUN_MAIN') is None:
    setup_database()

if __name__ == '__main__':
    print("[FLASK APP] üö¶ –ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ Flask...")
    app.run(host='0.0.0.0', port=5001, debug=True)