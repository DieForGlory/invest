# app/services/email_service.py

import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from flask import current_app, g
from flask_login import current_user

from ..models import auth_models
from ..core.extensions import db


def send_email(subject, html_body):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç email-—Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è–º –¢–ï–ö–£–©–ï–ô –∫–æ–º–ø–∞–Ω–∏–∏."""

    if not current_user.is_authenticated or not current_user.company:
        print("[EMAIL SERVICE] ‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–æ–º–ø–∞–Ω–∏—é –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞.")
        return

    company_config = current_user.company
    sender_email = company_config.mail_username

    # --- –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê –ü–û–õ–£–ß–ï–ù–ò–Ø –ê–î–†–ï–°–ê–¢–û–í ---
    # 1. –ü–æ–ª—É—á–∞–µ–º ID —Ç–µ–∫—É—â–µ–π –∫–æ–º–ø–∞–Ω–∏–∏
    current_company_id = current_user.company_id

    # 2. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º email-—ã —Ç–æ–ª—å–∫–æ —Ç–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ:
    #    –∞) —è–≤–ª—è—é—Ç—Å—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è–º–∏ (–µ—Å—Ç—å –≤ EmailRecipient)
    #    –±) –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—Ç –¢–ï–ö–£–©–ï–ô –∫–æ–º–ø–∞–Ω–∏–∏
    recipients_from_db = g.company_db_session.query(auth_models.User.email).join(
        auth_models.EmailRecipient, auth_models.User.id == auth_models.EmailRecipient.user_id
    ).filter(
        auth_models.User.company_id == current_company_id
    ).all()

    recipients = [email for email, in recipients_from_db]

    # --- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ---
    print("\n" + "=" * 50)
    print(f"[EMAIL SERVICE] üì® –ù–ê–ß–ê–õ–û –ü–†–û–¶–ï–°–°–ê –û–¢–ü–†–ê–í–ö–ò –ü–ò–°–¨–ú–ê –î–õ–Ø –ö–û–ú–ü–ê–ù–ò–ò: {company_config.name}")
    print(f"[EMAIL SERVICE] –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {sender_email}")
    print(f"[EMAIL SERVICE] –ü–æ–ª—É—á–∞—Ç–µ–ª–∏: {recipients}")
    print(f"[EMAIL SERVICE] –¢–µ–º–∞: {subject}")

    if not recipients:
        print("[EMAIL SERVICE] ‚ùï –í–ù–ò–ú–ê–ù–ò–ï: –°–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π –¥–ª—è —ç—Ç–æ–π –∫–æ–º–ø–∞–Ω–∏–∏ –ø—É—Å—Ç. –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
        print("=" * 50 + "\n")
        return

    msg = MIMEMultipart('alternative')
    msg['Subject'] = subject
    msg['From'] = sender_email
    msg['To'] = ", ".join(recipients)

    part = MIMEText(html_body, 'html')
    msg.attach(part)

    try:
        print(f"[EMAIL SERVICE] –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É: {company_config.mail_server}:{company_config.mail_port}")
        server = smtplib.SMTP(company_config.mail_server, company_config.mail_port)
        server.set_debuglevel(1)

        if company_config.mail_use_tls:
            server.starttls()

        server.login(company_config.mail_username, company_config.mail_password)
        server.sendmail(sender_email, recipients, msg.as_string())

    except Exception as e:
        print(f"[EMAIL SERVICE] ‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ü–†–ò –û–¢–ü–†–ê–í–ö–ï: {type(e).__name__}: {e}")
    finally:
        if 'server' in locals() and server:
            server.quit()
        print("[EMAIL SERVICE] üèÅ –ó–ê–í–ï–†–®–ï–ù–ò–ï –ü–†–û–¶–ï–°–°–ê –û–¢–ü–†–ê–í–ö–ò")
        print("=" * 50 + "\n")